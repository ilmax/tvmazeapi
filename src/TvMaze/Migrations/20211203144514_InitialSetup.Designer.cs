// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvMaze.Data;

#nullable disable

namespace TvMaze.Migrations
{
    [DbContext(typeof(TvMazeDbContext))]
    [Migration("20211203144514_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActorShow", b =>
                {
                    b.Property<long>("CastId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShowsId")
                        .HasColumnType("bigint");

                    b.HasKey("CastId", "ShowsId");

                    b.HasIndex("ShowsId");

                    b.ToTable("ActorShow");
                });

            modelBuilder.Entity("TvMaze.Domain.Actor", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DateOfBirth");

                    b.ToTable("Actors", (string)null);
                });

            modelBuilder.Entity("TvMaze.Domain.JobRunMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("LastSuccessfulShowPageFetched")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RunAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RunAtUtc");

                    b.ToTable("JobRunMetadata");
                });

            modelBuilder.Entity("TvMaze.Domain.Show", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("HasNoCastInTheApi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("ActorShow", b =>
                {
                    b.HasOne("TvMaze.Domain.Actor", null)
                        .WithMany()
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvMaze.Domain.Show", null)
                        .WithMany()
                        .HasForeignKey("ShowsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
